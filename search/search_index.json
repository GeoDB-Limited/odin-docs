{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This is ODIN documentation Main repository TestNet tools repository","title":"Home"},{"location":"#this-is-odin-documentation","text":"Main repository TestNet tools repository","title":"This is ODIN documentation"},{"location":"about/","text":"ODIN What is ODIN? ODIN is a decentralized system designed to build a data oracle network (DON), based on an open protocol for interaction between participants and a sustainable economy. In addition to organizing the data oracle network, ODIN involves building a decentralized peer-to-peer data sharing and trading ecosystem. ODIN is a new system that combines the advantages of cryptography and decentralized technologies, as well as the simplicity of connecting data providers and the flexibility of developing contracts to receive and process data from them (to work with business requirements, which are to increase the scalability and reliability of circulating data). By default, each accounting system is deterministic within its own boundaries. Simply put, the system can be guaranteed to trust only those events and information that are the product of the life of the system. However, when it comes to obtaining external data (confirmation of payments, external statistical information, etc.), we come to the need to use an additional entity - an oracle, which will be the provider of such information (a bridge between the accounting system and the outside world). Typically, such oracles are centralized, which in turn does not have a very good effect on the final decentralized accounting systems. This means that when such oracles are used, they are given the opportunity to manipulate data, which can lead to failures and incorrect decisions. The goal of ODIN is to create a decentralized infrastructure, which consists of a large number of data providers, whose data access is also decentralized (performed by a large number of validators).","title":"About"},{"location":"about/#odin","text":"","title":"ODIN"},{"location":"about/#what-is-odin","text":"ODIN is a decentralized system designed to build a data oracle network (DON), based on an open protocol for interaction between participants and a sustainable economy. In addition to organizing the data oracle network, ODIN involves building a decentralized peer-to-peer data sharing and trading ecosystem. ODIN is a new system that combines the advantages of cryptography and decentralized technologies, as well as the simplicity of connecting data providers and the flexibility of developing contracts to receive and process data from them (to work with business requirements, which are to increase the scalability and reliability of circulating data). By default, each accounting system is deterministic within its own boundaries. Simply put, the system can be guaranteed to trust only those events and information that are the product of the life of the system. However, when it comes to obtaining external data (confirmation of payments, external statistical information, etc.), we come to the need to use an additional entity - an oracle, which will be the provider of such information (a bridge between the accounting system and the outside world). Typically, such oracles are centralized, which in turn does not have a very good effect on the final decentralized accounting systems. This means that when such oracles are used, they are given the opportunity to manipulate data, which can lead to failures and incorrect decisions. The goal of ODIN is to create a decentralized infrastructure, which consists of a large number of data providers, whose data access is also decentralized (performed by a large number of validators).","title":"What is ODIN?"},{"location":"how-to/","text":"How to start with ODIN system Launching audit node Clone this repository . The repository contains the docker-compose file for quick launching of the node with preconfigurations on rpc, and genesis.json. Run startup bash script: ./start.sh It will start the light node for you, which will ingest all the previous heights Launching audit node with reporter ./start.sh r After node is launched, it starts syncing with network. Note: Check our nodes real-time logs with the following command: docker-compose logs -f --tail 100 node Becoming validator First of all, you need to log into your docker container docker exec -it node /bin/bash Creating wallet Once logged in, you can use bandd CLI to create a new ODIN wallet address. Please make sure to keep your mnemonic safe! (you can use --keyring-backend test with the following command, for testing purposes) bandd keys add [[YOUR_WALLET_NAME]] # e.g. user1 The output of this command should look like this: - name: user1 type: local address: odin1rcv2d9vljealh8z9sqtnw3ljjchn4k28cgyu7x pubkey: odinpub1addwnpepqtfj3p0ep5n4clla3gtd9a6czz9lytl59696mu4txx55375ald55c0jz2j9 mnemonic: \"\" threshold: 0 pubkeys: [] **Important** write this mnemonic phrase in a safe place. It is the only way to recover your account if you ever forget your password. man act ride inhale wall success example anxiety damp daring slogan still town smile frame ketchup resemble avocado stairs crater meat aim lumber grace Getting tokens After you've created wallet, you need tokens there, for these purposes you can either send the following POST request curl -X POST -F 'address=<you-wallet>' -F 'denom=loki' http://34.77.171.169:5005/request You will be provided with loki tokens. Sending transaction to become a validator In order to become a validator you should send a create-validator transaction with the command below bandd tx staking create-validator \\ --amount <your-amount-to-stake>loki \\ --commission-max-change-rate 0.01 \\ --commission-max-rate 0.2 \\ --commission-rate 0.1 \\ --from <your-wallet-name> \\ --min-self-delegation 1 \\ --moniker <your-moniker> \\ --pubkey $(bandd tendermint show-validator) \\ --chain-id odin-testnet","title":"How to's"},{"location":"how-to/#how-to-start-with-odin-system","text":"","title":"How to start with ODIN system"},{"location":"how-to/#launching-audit-node","text":"Clone this repository . The repository contains the docker-compose file for quick launching of the node with preconfigurations on rpc, and genesis.json. Run startup bash script: ./start.sh It will start the light node for you, which will ingest all the previous heights","title":"Launching audit node"},{"location":"how-to/#launching-audit-node-with-reporter","text":"./start.sh r After node is launched, it starts syncing with network. Note: Check our nodes real-time logs with the following command: docker-compose logs -f --tail 100 node","title":"Launching audit node with reporter"},{"location":"how-to/#becoming-validator","text":"First of all, you need to log into your docker container docker exec -it node /bin/bash","title":"Becoming validator"},{"location":"how-to/#creating-wallet","text":"Once logged in, you can use bandd CLI to create a new ODIN wallet address. Please make sure to keep your mnemonic safe! (you can use --keyring-backend test with the following command, for testing purposes) bandd keys add [[YOUR_WALLET_NAME]] # e.g. user1 The output of this command should look like this: - name: user1 type: local address: odin1rcv2d9vljealh8z9sqtnw3ljjchn4k28cgyu7x pubkey: odinpub1addwnpepqtfj3p0ep5n4clla3gtd9a6czz9lytl59696mu4txx55375ald55c0jz2j9 mnemonic: \"\" threshold: 0 pubkeys: [] **Important** write this mnemonic phrase in a safe place. It is the only way to recover your account if you ever forget your password. man act ride inhale wall success example anxiety damp daring slogan still town smile frame ketchup resemble avocado stairs crater meat aim lumber grace","title":"Creating wallet"},{"location":"how-to/#getting-tokens","text":"After you've created wallet, you need tokens there, for these purposes you can either send the following POST request curl -X POST -F 'address=<you-wallet>' -F 'denom=loki' http://34.77.171.169:5005/request You will be provided with loki tokens.","title":"Getting tokens"},{"location":"how-to/#sending-transaction-to-become-a-validator","text":"In order to become a validator you should send a create-validator transaction with the command below bandd tx staking create-validator \\ --amount <your-amount-to-stake>loki \\ --commission-max-change-rate 0.01 \\ --commission-max-rate 0.2 \\ --commission-rate 0.1 \\ --from <your-wallet-name> \\ --min-self-delegation 1 \\ --moniker <your-moniker> \\ --pubkey $(bandd tendermint show-validator) \\ --chain-id odin-testnet","title":"Sending transaction to become a validator"}]}